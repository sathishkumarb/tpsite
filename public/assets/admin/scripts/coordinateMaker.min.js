var copyArray = [];
jQuery(document).ready(function (e) {
    var map = {'imgName': '', 'areas': []};//map object
    var areas = {};//area object
    var seats = [];//seats object
    //modalOverlay jQuery
    var active = false, selections = [];
    var dialogBox, zoneCount, uploadStatus = false, uploadMap, click = false, clickedID, c = false, newName = "", boxName, boxDtcmName, boxPrice, length = 0, boxCount, valid = false, coordsText, imageName, boxType;
    //toTitleCase
    function toTitleCase(str) {
        return str.replace(/(?:^|\s)\w/g, function (match) {
            return match.toUpperCase();
        });
    }
    //valid form area
    function validAreaForm() {
        boxName = jQuery.trim(jQuery("#dialogAreaForm #boxName").val()).replace(/ /g, "_");
        boxDtcmName = jQuery.trim(jQuery("#dialogAreaForm #boxDtcmName").val()).replace(/ /g, "_");
        boxPrice = jQuery.trim(jQuery("#dialogAreaForm #boxPrice").val()).replace(/ /g, "_");
        boxCount = jQuery.trim(jQuery("#dialogAreaForm #boxCount").val()).replace(/ /g, "_");
        if (boxName && boxPrice && boxCount !== "") {
            coordsText = jQuery("#coordsText").val();
            imageName = jQuery("#imageName").val();
            boxType = jQuery("map").find(".area_tmp_area").attr('shape');
            return true;
        }
        return false;
    }
    //creating a new box
    function createNewBox() {
        jQuery('#tmpAreaForm').trigger('reset');
        jQuery('#dialogAreaForm').trigger('reset');
        jQuery('#drawCanvas').find('img.dot').remove();//remove all the tmp dots
        jQuery('#areaName').val('tmp_area');
        c = true;
        click = true;
        newName = jQuery('#areaName').val();
        //zoneCount = jQuery('area.area').length;
        zoneCount = jQuery('#zoneMaps > div').length;
        jQuery('#zoneCount').val(zoneCount).trigger("change");
        //
        var obj = map.areas;
        var html = '';
        html += '<option value="">Select Zone / Area</option>';
        jQuery.each(obj, function (k, v) {
            html += '<option value="' + v.zoneID + '">' + toTitleCase(v.zoneTitle) + '</option>';
        });
        jQuery('select#zoneArea').html('').append(html);
        //
    }
    //add area to a array
    function addAreaToMapObj(zoneID, zoneTitle, zoneDtcm, zonePrice, zoneType, zoneCount) {
        var nameID = zoneID.split('_')[1];
        jQuery('#zoneMaps').append('<div id="map_' + zoneID + '" class="btn-group btn-block" data-upload="false">\n\
                    <button id="uploadMap" class="btn btn-primary" data-id="' + zoneID + '" data-count="' + zoneCount + '" data-toggle="modal" data-dtcm="' + zoneDtcm + '" data-title="' + zoneTitle + '" data-price="' + zonePrice + '" data-type="' + zoneType + '">\n\
                        <span class="glyphicon glyphicon-unchecked"></span> ' + toTitleCase(nameID) + '\n\
                    </button>\n\
                    <button id="deleteMap" class="btn btn-primary" data-id="' + zoneID + '">\n\
                        <span class="glyphicon glyphicon-remove"></span>\n\
                    </button></div>');
        var zoneCoords = jQuery('#drawCanvas map area#' + zoneID).attr('coords');
        areas = new Object();
        areas.zoneID = zoneID;
        areas.zoneTitle = zoneTitle;
        areas.zonePrice = zonePrice;
        areas.zoneDtcm = zoneDtcm;
        areas.zoneType = zoneType;
        areas.zoneCount = zoneCount;
        areas.zoneMaps = zoneCoords;
        areas.zoneSeats = [];
        map.areas.push(areas);
    }
    //edit area from the array
    function editAreaFromMapObj(clickedID, zoneID, zoneTitle, zoneDtcm, zonePrice, zoneType, zoneCount) {
        var obj = map.areas;
        var nameID = zoneID.split('_')[1];
        var uploadData = jQuery('#zoneMaps').find('#map_' + clickedID).attr('data-upload');
        if (uploadData === 'false') {
            jQuery('#zoneMaps').find('#map_' + clickedID).remove();
            jQuery('#zoneMaps').append('<div id="map_' + zoneID + '" class="btn-group btn-block" data-upload="false">\n\
                    <button id="uploadMap" class="btn btn-primary" data-id="' + zoneID + '" data-count="' + zoneCount + '" data-toggle="modal" data-dtcm="' + zoneDtcm + '" data-title="' + zoneTitle + '" data-price="' + zonePrice + '" data-type="' + zoneType + '">\n\
                        <span class="glyphicon glyphicon-unchecked"></span> ' + toTitleCase(nameID) + '\n\
                    </button>\n\
                    <button id="deleteMap" class="btn btn-primary" data-id="' + zoneID + '">\n\
                        <span class="glyphicon glyphicon-remove"></span>\n\
                    </button></div>');
        }
        jQuery.each(obj, function (key, value) {
            if (value.zoneID === clickedID) {
                value.zoneID = zoneID;
                value.zoneTitle = zoneTitle;
                value.zoneDtcm = zoneDtcm;
                value.zonePrice = zonePrice;
                value.zoneCount = zoneCount;
            }
        });
        var c = jQuery('#mainForm #drawCanvas > div').length;
        if (c !== 0) {
            jQuery('#mainForm #drawCanvas > div').each(function (i, v) {
                if (clickedID === jQuery(this).data('zoneid')) {
                    jQuery(this).attr('data-zoneid', zoneID);
                }
            });
        }
    }
    //delete area from the array
    function deleteAreaFromMapObj(clickedID) {
        var obj = map.areas;
        map.areas = obj.filter(function (e) {
            return e.zoneID !== clickedID;
        });
        jQuery('#zoneMaps #map_' + clickedID).remove();
        if (clickedID.indexOf('area_') === 0) {
            jQuery('div[data-zoneid=' + clickedID + ']').remove();
        }
        //jQuery('map').find('area#' + clickedID).remove();
        //hightlight();
        createNewBox();
        click = true;
    }
    //remove all from array
    function removeAreasFromMapObj() {
        //map.areas = [];
        map = {'imgName': '', 'areas': []};//map object
        areas = {};//area object
        seats = [];//seats object
        jQuery('#mainForm #drawCanvas > div').remove();
    }
    //dialog box form
    dialogBox = jQuery("#dialogArea").dialog({
        dialogClass: "noClose",
        autoOpen: false,
        closeOnEscape: false,
        draggable: false,
        buttons: [
            {
                text: "SAVE",
                click: function () {
                    valid = validAreaForm();
                    if (valid) {
                        jQuery(this).dialog("close");
                        changeZoneArea();
                    } else {
                        alert("please fill the form");
                    }
                }
            },
            {
                text: "DELETE",
                click: function () {
                    jQuery(this).dialog("close");
                    deleteAreaFromMapObj(clickedID);
                }
            }
        ]
    });
    //save created zone
    function changeZoneArea() {
        var l = jQuery('#zoneMaps #map_' + clickedID).length;
        //var l = jQuery('map').find('area#' + clickedID).length;
        if (l !== 0) {
            editAreaFromMapObj(clickedID, 'area_' + boxName, boxName, boxDtcmName, boxPrice, boxType, boxCount);
            click = true;
        } else {
            addAreaToMapObj('area_' + boxName, boxName, boxDtcmName, boxPrice, boxType, boxCount);
        }
        createNewBox();
    }
    //span # drawToolArrow
    jQuery('span#drawToolArrow').click(function (e) {
        var top = jQuery('#draw-tools').css('top');
        if (top === '50px') {
            jQuery('#draw-tools').animate({
                top: '-15px'
            }, 900);
        } else {
            jQuery('#draw-tools').animate({
                top: '50px'
            }, 900);
        }
    });
    //span # drawShapesArrow
//    jQuery('span#drawShapesArrow').click(function (e) {
//        var top = jQuery('#draw-shapes').css('top');
//        if (uploadStatus) {
//            if (top === '0px') {
//                jQuery('#draw-shapes').animate({
//                    top: '-100px'
//                }, 1200);
//            } else {
//                jQuery('#draw-shapes').animate({
//                    top: '0px'
//                }, 1200);
//            }
//        }
//    });
    //when image upload give permission to add areas
    jQuery('#imageName').change(function (e) {
        if (jQuery(this).val() !== "") {
            createNewBox();
//            jQuery("#draw-tools").animate({
//                top: '-50px'
//            }, 1200, function () {
//                uploadStatus = true;
//            });
//            jQuery("#draw-shapes").animate({
//                top: '0'
//            }, 1200, function () {
//                uploadStatus = true;
//            }).delay(3000).animate({
//                top: '-100px'
//            }, 1200);
        }
    });
    //when zone is created
    jQuery('#zoneCount').change(function (e) {
        if (zoneCount <= 0) {
            jQuery('#drawCanvas').fadeOut();
            jQuery('form#imageUploader').fadeOut();
            jQuery('#continueEvent').addClass('hidden');
//            jQuery("#draw-shapes").animate({
//                right: '-180'
//            }, 3000, function () {
//                uploadStatus = false;
//            });
        } else {
            jQuery('#drawCanvas').fadeIn();
            jQuery('form#imageUploader').fadeIn();
            jQuery('#continueEvent').removeClass('hidden');
            uploadStatus = true;
        }
        jQuery('#uploadZone > span').html(zoneCount);
    });
    //select#zoneArea
    jQuery('select#zoneArea').change(function (e) {
        jQuery('#deleteDiv').empty();
        jQuery('#mapName').val(jQuery(this).val());
        uploadMap = jQuery('#mapName').val();
        boxCount = jQuery('div#map_' + uploadMap + ' button#uploadMap').data('count');
        jQuery('#mapCount').val(boxCount);
        jQuery('#mapName').trigger('change');
        jQuery('div.selected').removeClass('selected');
    });
    //------------//
    //---buttons--//
    //------------//
    //clear all maps
    jQuery("#clearAll").click(function (e) {
        removeAreasFromMapObj();
        jQuery('#zoneMaps').empty();
        createNewBox();
    });
    //clear last map
    jQuery("#clearLast").click(function (e) {
        var removeID = jQuery('#drawCanvas').find('area:last').attr('id');
        deleteAreaFromMapObj(removeID);
        jQuery('#drawCanvas').find('area:last').remove();
        createNewBox();
    });
    //save zone #saveZone
    jQuery("#createZone").click(function (e) {
        dialogBox.dialog("open");
        jQuery(".ui-dialog").find(".ui-button").eq(2).attr("disabled", true).addClass("btnDisabled");
        seats = [];
    });
    //enable Draggable Resizable
    function enableDraggableResizable() {
        jQuery('#mainForm #drawCanvas > div').each(function (e) {
            jQuery(this).draggable().resizable();
        });
        var obj = map.areas;
        jQuery.each(obj, function (key, value) {
            if (value.zoneID === uploadMap) {
                value.zoneSeats = [];
            }
        });
        enableOptions();
    }
    //------------//
    //---buttons--//
    //------------//
    //
    jQuery('#zoneMaps').delegate('#uploadMap', 'click', function (e) {
        clickedID = jQuery(this).data('id');
        boxCount = jQuery(this).data('count');
        jQuery("#dialogAreaForm #boxName").val(jQuery(this).attr('data-title'));
        jQuery('#dialogAreaForm #boxDtcmName').val(jQuery(this).attr('data-dtcm'));
        jQuery("#dialogAreaForm #boxPrice").val(jQuery(this).attr('data-price'));
        jQuery("#dialogAreaForm #boxCount").val(jQuery(this).attr('data-count'));
        dialogBox.dialog("open");
    });
    //
    jQuery('#zoneMaps').delegate('#deleteMap', 'click', function (e) {
        var deleteMap = jQuery(this).data('id');
        deleteAreaFromMapObj(deleteMap);
    });
    //prevent typing text
    jQuery("#dialogAreaForm #boxPrice").keypress(function (e) {
        //if the letter is not digit then display error and don't type anything
        if (e.which !== 8 && e.which !== 0 && (e.which < 48 || e.which > 57)) {
            //display error message
            return false;
        }
    });
    //prevent typing text
    jQuery("#dialogAreaForm #boxCount").keypress(function (e) {
        //if the letter is not digit then display error and don't type anything
        if (e.which !== 8 && e.which !== 0 && (e.which < 48 || e.which > 57)) {
            //display error message
            return false;
        }
    });
    //prevent typing special char
    jQuery('#dialogAreaForm #boxName').bind('keyup blur', function (e) {
        var node = jQuery(this);
        node.val(node.val().replace(/[^A-Za-z]/g, ''));
    });
    //add To Seat Selection Array
    function addToSeatSelectionArray(Id, zoneID, n) {
//        if (n === 0) {
//            jQuery('.selected').removeClass('selected');
//            selections = [];
//            selections.push(Id);
//            jQuery('div#' + Id + '[data-zoneid=' + zoneID + ']').addClass('selected');
//        } else {
//            if (jQuery.inArray(Id, selections) > -1) {
//                console.log("is in array");
//            } else {
//                jQuery('div#' + Id + '[data-zoneid=' + zoneID + ']').addClass('selected');
//                selections.push(Id);
//            }
//        }
        if (n === 0) {
            if (jQuery.inArray(Id, selections) > -1 && selections.length === 1) {
                selections.splice(selections.indexOf(Id), 1);
                jQuery('div#' + Id + '[data-zoneid=' + zoneID + '].selected').removeClass('selected');
                jQuery('#deleteDiv').empty();
            } else {
                jQuery('.selected').removeClass('selected');
                selections = [];
                selections.push(Id);
                jQuery('div#' + Id + '[data-zoneid=' + zoneID + ']').addClass('selected');
            }
        } else {
            if (jQuery.inArray(Id, selections) > -1) {
                //console.log("is in array");
                selections.splice(selections.indexOf(Id), 1);
                jQuery('div#' + Id + '[data-zoneid=' + zoneID + '].selected').removeClass('selected');
                if (selections.length === 0) {
                    jQuery('#deleteDiv').empty();
                }
            } else {
                jQuery('div#' + Id + '[data-zoneid=' + zoneID + ']').addClass('selected');
                selections.push(Id);
            }
        }
    }
    //delete From Seat Selection Array
    function deleteFromSeatSelectionArray(id) {
        if (id === 'deleteSelected') {
            var le = selections.length;
            for (var i = 0; i <= le; i++) {
                id = selections[i];
                jQuery('#drawCanvas #' + id).remove();
            }
        } else {
            jQuery('#drawCanvas #' + id).remove();
        }
        selections = [];
    }
    //check Created Seats
    function checkCreatedSeats() {
        var mapName = jQuery('input#mapName').val();
        length = jQuery('div[data-zoneid=' + mapName + ']').length;
        if (length < boxCount) {
            jQuery('#mapCount').val((parseInt(boxCount, 10) - parseInt(length, 10))).trigger('change');
            return true;
        } else {
            jQuery('#mapCount').val((parseInt(boxCount, 10) - parseInt(length, 10))).trigger('change');
            return false;
        }
    }
    //delete button creating
    function createDeleteBtn(id, n) {
        jQuery('#deleteDiv').empty();
        if (n > 0) {
            jQuery('#deleteDiv').append('<button id="deleteShape" data-id="deleteSelected" class="btn btn-primary btn-sm">Delete Selected Seats<span class="glyphicon glyphicon-remove-sign"></span></button>');
        } else {
            jQuery('#deleteDiv').append('<button id="deleteShape" data-id="' + id + '" class="btn btn-primary btn-sm">' + id.split('_')[1] + '<span class="glyphicon glyphicon-remove-sign"></span></button>');
        }
    }
    //enable options
    function enableOptions() {
        //when change white label
        jQuery('.ui-draggable').delegate('input.whiteLable', 'change', function (e) {
            e.stopImmediatePropagation();
            var val = jQuery(this).val();
            jQuery(this).parent('div').attr('id', 'seatID_' + val);
            jQuery(this).remove();
            jQuery('#seatID_' + val).append('<label class="whiteLable">' + val + '</label>');
        });
        //when click on a created seats
        jQuery('.ui-draggable').on('click', function (e) {
            var Id = "";
            var zoneID = "";
            e.stopImmediatePropagation();
            Id = jQuery(this).attr('id');
            zoneID = jQuery(this).attr('data-zoneId');
            if (Id.indexOf("sample_") >= 0) {
                createDeleteBtn(Id, zoneID, 0);
            } else {
                if (e.ctrlKey) {
//                    createDeleteBtn(Id, 1);//create 
                    addToSeatSelectionArray(Id, zoneID, 1);//add to array multi selection
                    if (selections.length === 1) {
                        createDeleteBtn(selections[0], 0);//create 
                    } else if (selections.length > 1) {
                        createDeleteBtn(Id, 1);//create
                    }
                } else {
                    createDeleteBtn(Id, 0);//create 
                    addToSeatSelectionArray(Id, zoneID, 0);//add to array multi selection
                }
            }
        });
        //delete button click
        jQuery('#deleteDiv').delegate('#deleteShape', 'click', function (e) {
            e.stopImmediatePropagation();
            var attr = jQuery(this).attr('data-id');
            if (attr === 'deleteAll') {
                deleteFromSeatSelectionArray(attr);
            } else {
                deleteFromSeatSelectionArray(attr);
                jQuery('#drawCanvas #' + attr).remove();
            }
            jQuery(this).remove();
            checkCreatedSeats();
        });
    }
    //modalOverlay jQuery
    function addNewShape() {
        var position = jQuery('#mainForm #drawCanvas').position();
//        var l = Math.round(position.left);
//        var t = Math.round(position.top);
        var l = Math.round(jQuery(window).width() / 2);
        var t = Math.round(jQuery(window).height() / 2);
        jQuery('#newShape.square, #newShape.rectangle, #newShape.circle, #newShape.oval').draggable().css({'position': 'absolute', 'cursor': 'move', 'left': l, 'top': t});
        jQuery('#newShape.rectangle').resizable({
            //animate: true,
            //ghost: true,
            //aspectRatio: 16 / 9,
            minHeight: 5,
            minWidth: 5
        });
        jQuery('#newShape.square').resizable({
            //animate: true,
            //ghost: true,
            aspectRatio: 1 / 1,
            minHeight: 5,
            minWidth: 5
        });
        jQuery('#newShape.circle').resizable({
            //animate: true,
            //ghost: true,
            aspectRatio: 1 / 1,
            minHeight: 5,
            minWidth: 5
        });
        jQuery('#newShape.oval').resizable({
            //animate: true,
            //ghost: true,
            aspectRatio: 16 / 9,
            minHeight: 5,
            minWidth: 5
        });
        var elmId = 'sample_' + (Math.floor(Math.random() * 30) + 1);//random ID
        jQuery('#newShape.square, #newShape.rectangle, #newShape.circle, #newShape.oval').attr('id', elmId);
    }
    //adding a custom shape
    function addCustomShape(type) {
        var zoneId = jQuery('input#mapName').val();
        var c = checkCreatedSeats();//check Created Seats
        if (c) {
            var elmId = 'sample_' + (Math.floor(Math.random() * 30) + 1);
            jQuery('#mainForm #drawCanvas').append('<div id="newShape" class="' + type + ' ' + zoneId + '" data-zoneId="' + zoneId + '"><input id="' + elmId + '" name="' + elmId + '" class="whiteLable" type="text" value="SeatID"/></div>');
            addNewShape();//new shape added
            enableOptions();//active other functions
            checkCreatedSeats();//check Created Seats
        } else {
            alert('No seats available for create...');
        }
    }
    //when click on shapes
    jQuery('.shapes li').on('click', function (e) {
        if (active) {
            addCustomShape(jQuery(this).attr('id'));
        } else {
            alert('Please select a zone / area');
        }
    });
    //when image upload give permission to add areas
    jQuery('#mapName').change(function (e) {
        if (jQuery(this).val() !== "") {
            active = true;
            //jQuery('#zoneID').val(uploadMap);
            jQuery('#mapCount').val(boxCount).trigger('change');
        } else {
            active = false;
        }
    });
    //mapCount on change
    jQuery('#mapCount').change(function (e) {
        var l = jQuery('#mainForm #drawCanvas > div').length;
        if (l === 0) {
            jQuery(this).val(boxCount);
        }
        jQuery('#mapZone > span').empty().html(jQuery(this).val());
    });
    //clear created seats
    jQuery('#clearZone').on('click', function (e) {
        copyArray = [];
        jQuery('#mainForm #drawCanvas > div').each(function (e) {
            jQuery(this).remove();
        });
        jQuery('#draw-shapes #deleteDiv').empty();
        jQuery('#mapCount').trigger('change');
    });
    //goBack btn
    jQuery('#goBack').on('click', function (e) {
        removeAreasFromMapObj();
        jQuery('div#zoneMaps').html('');
        jQuery('.mainModalOverlay').hide();
        jQuery('#tmpAreaForm')[0].reset();
    });
    //continue to event
    jQuery('#continueEvent').on('click', function (e) {
        var imageName = jQuery('#imageName').val();
        map.imgName = imageName;
        var zoneID = '';
        seats = [];
        var tmpObj = map.areas;
        jQuery.each(tmpObj, function (i, v) {
            v.zoneSeats = [];
        });
        jQuery('#mainForm #drawCanvas > div').each(function (index, value) {
            var seatObj = new Object();
            seatObj.seatID = value.id;
            seatObj.type = jQuery('#mainForm #drawCanvas #' + value.id).attr('class').split(' ')[0];
            seatObj.options = {
                'top': jQuery('#mainForm #drawCanvas #' + value.id).css('top'),
                'left': jQuery('#mainForm #drawCanvas #' + value.id).css('left'),
                'width': jQuery('#mainForm #drawCanvas #' + value.id).css('width'),
                'height': jQuery('#mainForm #drawCanvas #' + value.id).css('height')
            };
            zoneID = jQuery('#mainForm #drawCanvas #' + value.id).attr('data-zoneid');
            var obj = map.areas;
            jQuery.each(obj, function (key, value) {
                if (value.zoneID === zoneID) {
                    value.zoneSeats.push(seatObj);
                }
            });
        });
        jQuery('div#zoneMaps').html('');
        jQuery('.mainModalOverlay').hide();
        jQuery('#tmpAreaForm')[0].reset();
    });
    //get next char letter
    function nextChar(c) {
        return String.fromCharCode(c.charCodeAt(0) + 1);
    }
    //increase Numbering and Lettering
    function increaseNumbering(type) {
        var tmpID;
        jQuery.each(copyArray, function (i, v) {
            var t = parseInt(jQuery('#mainForm #drawCanvas #' + v.id).css('top'));
            var l = parseInt(jQuery('#mainForm #drawCanvas #' + v.id).css('left'));
            var w = parseInt(jQuery('#mainForm #drawCanvas #' + v.id).css('width'));
            var h = parseInt(jQuery('#mainForm #drawCanvas #' + v.id).css('height'));
            if (type === 'number') {
                l = (l) + (w) + 10; // to right only 09122015
                var txt = v.id.replace(/\d+/g, '');
                var num = v.id.replace(/^\D+/g, '');
                tmpID = txt + parseInt(++num);
            } else if (type === 'letter') {
                t = (t) + (h) + 10; // to bottom only 09122015
                var txt = v.id.replace(/\d+/g, '');
                var char = txt.split('_');
                var num = v.id.replace(/^\D+/g, '');
                tmpID = nextChar(char[1]);
                if (tmpID !== "") {//
                    tmpID = char[0] + '_' + tmpID + num;
                }
            }
            var cls = jQuery('#mainForm #drawCanvas #' + v.id).attr('class').split(' ')[0];
            if (jQuery('#mainForm #drawCanvas #' + tmpID).length === 0) {//check if element is exist 
                jQuery('#mainForm #drawCanvas #' + v.id).clone().prop({'id': tmpID, 'class': cls}).css({'left': l, 'top': t}).appendTo("#mainForm #drawCanvas").empty();
                jQuery('#mainForm #drawCanvas #' + tmpID).append('<label class="whiteLable">' + tmpID.split('_')[1] + '</label>').draggable().resizable();
            }
        });
        copyArray = []; //after paste make it empty
        enableOptions();
        checkCreatedSeats();
    }
    //KEYBOARD BUTTON MAPPING
    //document keyUp
    jQuery(document).keyup(function (e) {
        //copy seats
        if (e.keyCode === 67 && e.ctrlKey) {
            copyArray = [];
            jQuery.each(selections, function (i, v) {
                var copyObj = new Object();
                copyObj.id = v;
                copyArray.push(copyObj);
            });
        }
        //paste seats
        if (e.keyCode === 86 && e.ctrlKey) {
            if (copyArray.length > 0) {
                jQuery('body').append('<div id="txtOrnum" title="Letter Or Number"><p>Increase Letter Or Number?</p></div>');
                jQuery("#txtOrnum").dialog({
                    dialogClass: "noClose",
                    //autoOpen: false,
                    closeOnEscape: false,
                    draggable: false,
                    title: "Letter Or Number",
                    resizable: false,
                    modal: true,
                    buttons: {
                        "Letter": function () {
                            jQuery(this).dialog("close");
                            jQuery(this).remove();
                            increaseNumbering('letter');
                        },
                        "Number": function () {
                            jQuery(this).dialog("close");
                            jQuery(this).remove();
                            increaseNumbering('number');
                        }
                    }
                });
            }
        }
    });
    //document keyDown
    var pressed = false;
    jQuery(document).keydown(function (e) {
        if (!pressed) {
            if (e.ctrlKey) {
                width = 1;
                height = 1;
                switch (e.which) {
                    case 37:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            left: '-=' + width
                        }, 1); //left arrow key
                        break;
                    case 38:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            top: '-=' + height
                        }, 1); //up arrow key
                        break;
                    case 39:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            left: '+=' + width
                        }, 1); //right arrow key
                        break;
                    case 40:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            top: '+=' + height
                        }, 1); //bottom arrow key
                        break;
                }
            } else {
                width = $(this).width();
                height = $(this).height();
                switch (e.which) {
                    case 37:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            left: '-=' + width
                        }, 2000); //left arrow key
                        break;
                    case 38:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            top: '-=' + height
                        }, 2000); //up arrow key
                        break;
                    case 39:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            left: '+=' + width
                        }, 2000); //right arrow key
                        break;
                    case 40:
                        e.preventDefault();
                        jQuery('.selected').stop().animate({
                            top: '+=' + height
                        }, 2000); //bottom arrow key
                        break;
                }
            }
        } else {
            switch (e.which) {
                case 37:
                case 38:
                case 39:
                case 40: // Arrow keys
                    e.preventDefault();
                    break;
            }
        }
        pressed = true;
    }).keyup(function () {
        jQuery('.selected').stop();
        pressed = false;
    });
    //event Map Btn click button
    jQuery('#eventMap').click(function (e) {
        e.preventDefault();
        if (map.areas.length > 0) {
            jQuery('button#goBack').show();
            jQuery('.mainModalOverlay').show();
            return false;
        }
        jQuery('#mainForm #drawCanvas #mainFloor').attr('src', "");
        jQuery('#mainForm #drawCanvas').hide();
        var areas = map.areas;
        jQuery.each(areas, function (i, v) {
            var zoneID = v.zoneID;
            var seatObj = v.zoneSeats;
            if (typeof seatObj !== "undefined") {
                jQuery.each(seatObj, function (k, n) {
                    var t = n.options.top;
                    var l = n.options.left;
                    var w = n.options.width;
                    var h = n.options.height;
                    jQuery('#mainForm #drawCanvas').append('<div id="' + n.seatID + '" class="' + n.type + '" data-zoneId="' + zoneID + '" style="position: absolute; cursor: move; left: ' + l + '; top: ' + t + '; width:' + w + '; height:' + h + '; min-width: 5px; min-height: 5px;"><label class="whiteLable">' + n.seatID.split('_')[1] + '</label></div>');
                });
            }
            jQuery('#zoneMaps').append('<div id="map_' + v.zoneID + '" class="btn-group btn-block" data-upload="true">\n\
                            <button id="uploadMap" class="btn btn-primary" data-id="' + v.zoneID + '" data-count="' + v.zoneCount + '" data-toggle="modal" data-dtcm="' + v.zoneDtcm + '" data-count="' + v.zoneCount + '" data-title="' + v.zoneTitle + '" data-price="' + v.zonePrice + '" data-type="' + v.zoneType + '">\n\
                                <span class="glyphicon glyphicon-unchecked"></span> ' + toTitleCase(v.zoneTitle) + '\n\
                            </button>\n\
                            <button id="deleteMap" class="btn btn-primary" data-id="' + v.zoneID + '">\n\
                                <span class="glyphicon glyphicon-remove"></span>\n\
                            </button></div>');
        });
        enableDraggableResizable();
//        jQuery('#mainFloor').attr('src', FULL_URL_PATH + '/uploads/maps/' + map.imgName);
//        jQuery('#mainFloor').attr('width', '1024');
//        jQuery('#mainForm #output').html('Editing image added').delay(3000).fadeOut(function () {
//            jQuery('#imageName').val(map.imgName).trigger("change");
//            jQuery('#drawCanvas').fadeIn('slow');
//        });
        click = true;
        jQuery('button#goBack').show();
        jQuery('.mainModalOverlay').show();
    });
    //edit Map Btn click
    jQuery('#editMap').click(function (e) {
        e.preventDefault();
        if (map.areas.length > 0) {
            jQuery('button#goBack').show();
            jQuery('.mainModalOverlay').show();
            return false;
        }
        map = {'imgName': '', 'areas': []};//map object
        areas = {};//area object
        seats = [];//seats object
        jQuery('#mainForm #drawCanvas > div').remove();
        var eventID, layoutID, path;
        eventID = jQuery('#event_id').val();
        layoutID = jQuery('#layout_id').val();
        path = FULL_URL_PATH + '/admin/event/ajaxeditdrawing';
        jQuery.ajax({
            type: 'POST',
            url: path,
            dataType: 'json',
            async: false,
            data: {'eventID': eventID, 'layoutID': layoutID},
            success: function (response) {
                if (response.status === 'success') {
                    map = response.mapObject;
                    var areas = map.areas;
                    jQuery.each(areas, function (i, v) {
                        var zoneID = v.zoneID;
                        var seatObj = v.zoneSeats;
                        if (typeof seatObj !== "undefined") {
                            jQuery.each(seatObj, function (k, n) {
                                var t = n.options.top;
                                var l = n.options.left;
                                var w = n.options.width;
                                var h = n.options.height;
                                jQuery('#mainForm #drawCanvas').append('<div id="' + n.seatID + '" class="' + n.type + '" data-zoneId="' + zoneID + '" style="position: absolute; cursor: move; left: ' + l + '; top: ' + t + '; width:' + w + '; height:' + h + '; min-width: 5px; min-height: 5px;"><label class="whiteLable">' + n.seatID.split('_')[1] + '</label></div>');
                            });
                        }
                        jQuery('#zoneMaps').append('<div id="map_' + v.zoneID + '" class="btn-group btn-block" data-upload="true">\n\
                            <button id="uploadMap" class="btn btn-primary" data-id="' + v.zoneID + '" data-count="' + v.zoneCount + '" data-toggle="modal" data-dtcm="' + v.zoneDtcm + '" data-count="' + v.zoneCount + '" data-title="' + v.zoneTitle + '" data-price="' + v.zonePrice + '" data-type="' + v.zoneType + '">\n\
                                <span class="glyphicon glyphicon-unchecked"></span> ' + toTitleCase(v.zoneTitle) + '\n\
                            </button>\n\
                            <button id="deleteMap" class="btn btn-primary" data-id="' + v.zoneID + '">\n\
                                <span class="glyphicon glyphicon-remove"></span>\n\
                            </button></div>');
                    });
                    enableDraggableResizable();
                    jQuery('#mainFloor').attr('src', FULL_URL_PATH + '/uploads/maps/' + map.imgName);
                    jQuery('#mainFloor').attr('width', '1024');
                    jQuery('#mainForm #output').html('Editing image added').delay(3000).fadeOut(function () {
                        jQuery('#imageName').val(map.imgName).trigger("change");
                        jQuery('#drawCanvas').fadeIn('slow');
                    });
                    jQuery('button#goBack').show();
                    jQuery('.mainModalOverlay').show();
                }
            }
        });
    });
    //save Map Btn click button save to db
    jQuery('.saveMapBtn').click(function (e) {
        var attr = jQuery('.uploadEventMap button').attr('id');
        if (attr === 'editMap') {
            click = true;
        }
        if (click) {
            jQuery('.uploadEventMap span').html('Event created successfully');
            var eventID, layoutID, path;
            eventID = jQuery('#event_id').val();
            layoutID = jQuery('#layout_id').val();
            path = FULL_URL_PATH + '/admin/event/ajaxsavedrawing';
            var id = jQuery(this).attr('id');
            if (id === 'publish') {
                var jsonData = JSON.stringify(map);
                jQuery.ajax({
                    type: 'POST',
                    url: path,
                    async: false,
                    data: {'jsonData': jsonData, 'eventID': eventID, 'layoutID': layoutID},
                    success: function (response) {
                        if (response === 'success') {
                            jQuery('.mainModalOverlay').hide();
                            map = {'imgName': '', 'areas': []};//map object
                            areas = {};//area object
                            seats = [];//seats object
                            window.location.replace('http://' + window.location.hostname + FULL_URL_PATH + '/admin/event/list');
                        }
                    }
                });
            }
        } else {
            alert('Please upload a map');
        }
    });
});