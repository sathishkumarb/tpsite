<?php

namespace DoctrineORMModule\Proxy\__CG__\Admin\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EventSeat extends \Admin\Entity\EventSeat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'id', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'width', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'height', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'pleft', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'top', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'lineheight', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'seatEntrance', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'seatPrice', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'currency', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'numberOfSeats', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'ticketType', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'redeemOn', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'createdDate', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'event', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'isDeleted');
        }

        return array('__isInitialized__', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'id', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'width', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'height', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'pleft', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'top', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'lineheight', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'seatEntrance', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'seatPrice', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'currency', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'numberOfSeats', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'ticketType', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'redeemOn', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'createdDate', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'event', '' . "\0" . 'Admin\\Entity\\EventSeat' . "\0" . 'isDeleted');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EventSeat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', array($width));

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', array());

        return parent::getWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', array($height));

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', array());

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setPleft($pleft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPleft', array($pleft));

        return parent::setPleft($pleft);
    }

    /**
     * {@inheritDoc}
     */
    public function getPleft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPleft', array());

        return parent::getPleft();
    }

    /**
     * {@inheritDoc}
     */
    public function setTop($top)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTop', array($top));

        return parent::setTop($top);
    }

    /**
     * {@inheritDoc}
     */
    public function getTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTop', array());

        return parent::getTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setLineheight($lineheight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLineheight', array($lineheight));

        return parent::setLineheight($lineheight);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineheight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineheight', array());

        return parent::getLineheight();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeatEntrance($seatEntrance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeatEntrance', array($seatEntrance));

        return parent::setSeatEntrance($seatEntrance);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeatEntrance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeatEntrance', array());

        return parent::getSeatEntrance();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeatPrice($seatPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeatPrice', array($seatPrice));

        return parent::setSeatPrice($seatPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeatPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeatPrice', array());

        return parent::getSeatPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', array($currency));

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', array());

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOfSeats($numberOfSeats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOfSeats', array($numberOfSeats));

        return parent::setNumberOfSeats($numberOfSeats);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfSeats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfSeats', array());

        return parent::getNumberOfSeats();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicketType($ticketType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicketType', array($ticketType));

        return parent::setTicketType($ticketType);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketType', array());

        return parent::getTicketType();
    }

    /**
     * {@inheritDoc}
     */
    public function setRedeemOn($redeemOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRedeemOn', array($redeemOn));

        return parent::setRedeemOn($redeemOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getRedeemOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRedeemOn', array());

        return parent::getRedeemOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedDate($createdDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedDate', array($createdDate));

        return parent::setCreatedDate($createdDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDate', array());

        return parent::getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvent(\Admin\Entity\Event $event = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvent', array($event));

        return parent::setEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', array());

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDeleted', array());

        return parent::getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDeleted($isDeleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDeleted', array($isDeleted));

        return parent::setIsDeleted($isDeleted);
    }

}
